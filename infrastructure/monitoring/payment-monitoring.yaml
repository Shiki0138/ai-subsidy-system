# 決済システム専用監視設定
# Team D: Infrastructure & Monitoring
# Created: 2025-06-20
# Purpose: ハイブリッド課金モデル実装における決済システムの信頼性保証

apiVersion: v1
kind: ConfigMap
metadata:
  name: payment-monitoring-config
  namespace: ai-subsidy-system
  labels:
    component: payment-monitoring
    team: team-d
    created-by: "hybrid-billing-implementation"
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "payment_alerts.yml"
      - "security_alerts.yml"

    scrape_configs:
      # 決済API監視
      - job_name: 'payment-api'
        scrape_interval: 5s
        metrics_path: '/metrics'
        static_configs:
          - targets: ['payment-service:8080']
        scrape_timeout: 4s

      # Stripe Webhook監視
      - job_name: 'stripe-webhooks'
        scrape_interval: 10s
        metrics_path: '/webhook/metrics'
        static_configs:
          - targets: ['webhook-processor:8081']

      # データベース監視
      - job_name: 'postgres-exporter'
        scrape_interval: 30s
        static_configs:
          - targets: ['postgres-exporter:9187']

      # Redis監視
      - job_name: 'redis-exporter'
        scrape_interval: 30s
        static_configs:
          - targets: ['redis-exporter:9121']

  payment_alerts.yml: |
    groups:
      - name: payment_system_alerts
        interval: 30s
        rules:
          # 決済成功率監視（99.5%閾値）
          - alert: PaymentSuccessRateLow
            expr: |
              (
                sum(rate(payment_transactions_total{status="success"}[5m])) /
                sum(rate(payment_transactions_total[5m]))
              ) * 100 < 99.5
            for: 2m
            labels:
              severity: critical
              team: team-d
              impact: "user-experience"
            annotations:
              summary: "決済成功率が99.5%を下回りました"
              description: "過去5分間の決済成功率が {{ $value }}% です。ユーザーの決済に影響が出ています。"
              runbook_url: "https://docs.ai-subsidy.com/runbooks/payment-failure"
              user_impact: "ユーザーが決済を完了できない可能性があります"

          # 決済レイテンシ監視（3秒閾値）
          - alert: PaymentLatencyHigh
            expr: |
              histogram_quantile(0.99, 
                sum(rate(payment_request_duration_seconds_bucket[5m])) by (le)
              ) > 3
            for: 1m
            labels:
              severity: warning
              team: team-d
              impact: "performance"
            annotations:
              summary: "決済処理のレイテンシが高すぎます"
              description: "99%ile レイテンシが {{ $value }}秒 です。3秒以内の目標を超えています。"
              user_impact: "ユーザーの決済体験が低下しています"

          # Webhook処理監視（99.9%閾値）
          - alert: WebhookProcessingFailure
            expr: |
              (
                sum(rate(stripe_webhook_processed_total{status="success"}[5m])) /
                sum(rate(stripe_webhook_processed_total[5m]))
              ) * 100 < 99.9
            for: 1m
            labels:
              severity: critical
              team: team-d
              impact: "data-consistency"
            annotations:
              summary: "Stripe Webhook処理の成功率が低下しています"
              description: "Webhook処理成功率が {{ $value }}% です。決済状態の同期に問題が発生している可能性があります。"
              user_impact: "決済完了後の処理に遅延が発生する可能性があります"

          # 決済タイムアウト監視
          - alert: PaymentTimeoutRate
            expr: |
              sum(rate(payment_transactions_total{status="timeout"}[5m])) /
              sum(rate(payment_transactions_total[5m])) * 100 > 1
            for: 2m
            labels:
              severity: warning
              team: team-d
              impact: "user-experience"
            annotations:
              summary: "決済タイムアウト率が高すぎます"
              description: "タイムアウト率が {{ $value }}% です。決済システムの応答性に問題があります。"

          # 自動リトライ監視
          - alert: PaymentRetryRateHigh
            expr: |
              sum(rate(payment_retries_total[5m])) /
              sum(rate(payment_transactions_total[5m])) * 100 > 5
            for: 3m
            labels:
              severity: warning
              team: team-d
              impact: "system-stability"
            annotations:
              summary: "決済リトライ率が高すぎます"
              description: "リトライ率が {{ $value }}% です。システムの安定性に懸念があります。"

      - name: infrastructure_alerts
        interval: 60s
        rules:
          # データベース接続監視
          - alert: DatabaseConnectionFailure
            expr: |
              up{job="postgres-exporter"} == 0
            for: 30s
            labels:
              severity: critical
              team: team-d
              impact: "system-availability"
            annotations:
              summary: "データベース接続に失敗しています"
              description: "PostgreSQLデータベースに接続できません。"
              user_impact: "すべての決済処理が停止します"

          # Redis接続監視
          - alert: RedisConnectionFailure
            expr: |
              up{job="redis-exporter"} == 0
            for: 30s
            labels:
              severity: critical
              team: team-d
              impact: "session-management"
            annotations:
              summary: "Redisキャッシュ接続に失敗しています"
              description: "Redisクラスターに接続できません。"
              user_impact: "セッション管理とキャッシュが機能しません"

          # リソース使用率監視
          - alert: HighCPUUsage
            expr: |
              100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
            for: 5m
            labels:
              severity: warning
              team: team-d
              impact: "performance"
            annotations:
              summary: "CPU使用率が高すぎます"
              description: "CPU使用率が {{ $value }}% です。"

          - alert: HighMemoryUsage
            expr: |
              (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
            for: 5m
            labels:
              severity: warning
              team: team-d
              impact: "performance"
            annotations:
              summary: "メモリ使用率が高すぎます"
              description: "メモリ使用率が {{ $value }}% です。"

  security_alerts.yml: |
    groups:
      - name: security_monitoring
        interval: 30s
        rules:
          # 不審な決済パターン検知
          - alert: SuspiciousPaymentPattern
            expr: |
              sum(rate(payment_transactions_total{amount_range="high"}[1m])) by (user_id) > 10
            for: 1m
            labels:
              severity: warning
              team: team-d
              impact: "security"
            annotations:
              summary: "不審な決済パターンを検知しました"
              description: "ユーザー{{ $labels.user_id }}が短時間で大量の高額決済を実行しています。"

          # 失敗ログイン試行監視
          - alert: HighFailedLoginRate
            expr: |
              sum(rate(auth_failed_attempts_total[5m])) by (ip_address) > 20
            for: 2m
            labels:
              severity: warning
              team: team-d
              impact: "security"
            annotations:
              summary: "ログイン失敗試行が多すぎます"
              description: "IP {{ $labels.ip_address }} から5分間で {{ $value }} 回のログイン失敗がありました。"

          # WAFブロック率監視
          - alert: HighWAFBlockRate
            expr: |
              sum(rate(waf_blocked_requests_total[5m])) /
              sum(rate(waf_total_requests[5m])) * 100 > 10
            for: 3m
            labels:
              severity: warning
              team: team-d
              impact: "security"
            annotations:
              summary: "WAFブロック率が高すぎます"
              description: "WAFによるブロック率が {{ $value }}% です。攻撃を受けている可能性があります。"

  grafana_dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "決済システム監視ダッシュボード",
        "tags": ["payment", "team-d", "hybrid-billing"],
        "timezone": "Asia/Tokyo",
        "panels": [
          {
            "id": 1,
            "title": "決済成功率 (リアルタイム)",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(rate(payment_transactions_total{status=\"success\"}[1m])) / sum(rate(payment_transactions_total[1m])) * 100",
                "legendFormat": "成功率"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": 0},
                    {"color": "yellow", "value": 95},
                    {"color": "green", "value": 99.5}
                  ]
                },
                "unit": "percent"
              }
            }
          },
          {
            "id": 2,
            "title": "決済レイテンシ分布",
            "type": "heatmap",
            "targets": [
              {
                "expr": "sum(rate(payment_request_duration_seconds_bucket[5m])) by (le)",
                "legendFormat": "{{le}}"
              }
            ]
          },
          {
            "id": 3,
            "title": "1分あたりの決済数",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(payment_transactions_total[1m])) * 60",
                "legendFormat": "総決済数/分"
              },
              {
                "expr": "sum(rate(payment_transactions_total{status=\"success\"}[1m])) * 60",
                "legendFormat": "成功決済数/分"
              },
              {
                "expr": "sum(rate(payment_transactions_total{status=\"failed\"}[1m])) * 60",
                "legendFormat": "失敗決済数/分"
              }
            ]
          },
          {
            "id": 4,
            "title": "Webhook処理状況",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(stripe_webhook_processed_total[5m]))",
                "legendFormat": "処理済Webhook/秒"
              },
              {
                "expr": "sum(stripe_webhook_queue_size)",
                "legendFormat": "待機中Webhook数"
              }
            ]
          },
          {
            "id": 5,
            "title": "決済方法別成功率",
            "type": "piechart",
            "targets": [
              {
                "expr": "sum(rate(payment_transactions_total{status=\"success\"}[5m])) by (payment_method)",
                "legendFormat": "{{payment_method}}"
              }
            ]
          },
          {
            "id": 6,
            "title": "インフラリソース使用率",
            "type": "graph",
            "targets": [
              {
                "expr": "100 - (avg(irate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)",
                "legendFormat": "CPU使用率"
              },
              {
                "expr": "(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100",
                "legendFormat": "メモリ使用率"
              }
            ]
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "10s"
      }
    }

---
# AlertManager設定
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: ai-subsidy-system
data:
  alertmanager.yml: |
    global:
      smtp_smarthost: 'smtp.gmail.com:587'
      smtp_from: 'alerts@ai-subsidy.com'
      smtp_auth_username: 'alerts@ai-subsidy.com'
      smtp_auth_password_file: '/etc/alertmanager/secrets/smtp_password'

    route:
      group_by: ['alertname', 'team']
      group_wait: 10s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'team-d-alerts'
      routes:
        - match:
            severity: critical
          receiver: 'critical-alerts'
          group_wait: 0s
          repeat_interval: 5m
        - match:
            team: team-d
          receiver: 'team-d-alerts'

    receivers:
      - name: 'team-d-alerts'
        email_configs:
          - to: 'team-d@ai-subsidy.com'
            subject: '[Team D] {{ .GroupLabels.alertname }} - {{ .Status }}'
            body: |
              {{ range .Alerts }}
              アラート: {{ .Annotations.summary }}
              詳細: {{ .Annotations.description }}
              ユーザー影響: {{ .Annotations.user_impact }}
              ランブック: {{ .Annotations.runbook_url }}
              発生時刻: {{ .StartsAt }}
              {{ end }}
        slack_configs:
          - api_url: 'https://hooks.slack.com/services/TEAM_D_WEBHOOK'
            channel: '#team-d-alerts'
            title: '{{ .GroupLabels.alertname }}'
            text: |
              {{ range .Alerts }}
              🚨 *{{ .Annotations.summary }}*
              {{ .Annotations.description }}
              
              *ユーザー影響:* {{ .Annotations.user_impact }}
              *対応手順:* {{ .Annotations.runbook_url }}
              {{ end }}

      - name: 'critical-alerts'
        email_configs:
          - to: 'critical@ai-subsidy.com'
            subject: '[CRITICAL] {{ .GroupLabels.alertname }}'
            body: |
              緊急アラート: {{ .GroupLabels.alertname }}
              
              {{ range .Alerts }}
              詳細: {{ .Annotations.description }}
              ユーザー影響: {{ .Annotations.user_impact }}
              即座に対応が必要です。
              {{ end }}
        pagerduty_configs:
          - service_key: 'PAGERDUTY_SERVICE_KEY'
            description: '{{ .GroupLabels.alertname }}: {{ .Annotations.summary }}'

    inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'team']

---
# Prometheus ServiceMonitor for automatic discovery
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: payment-system-monitor
  namespace: ai-subsidy-system
  labels:
    team: team-d
    component: payment-monitoring
spec:
  selector:
    matchLabels:
      app: payment-service
  endpoints:
    - port: metrics
      interval: 15s
      path: /metrics
      scheme: http
    - port: webhook-metrics
      interval: 10s
      path: /webhook/metrics
      scheme: http