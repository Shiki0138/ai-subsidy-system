'use client'

import React, { Component, ErrorInfo, ReactNode } from 'react'
import { 
  ExclamationTriangleIcon, 
  ArrowPathIcon,
  ChatBubbleLeftEllipsisIcon,
  HomeIcon,
  DocumentDuplicateIcon
} from '@heroicons/react/24/outline'
import { Button } from '../ui/Button'

interface Props {
  children: ReactNode
  fallback?: ReactNode
  onError?: (error: Error, errorInfo: ErrorInfo) => void
}

interface State {
  hasError: boolean
  error: Error | null
  errorInfo: ErrorInfo | null
  errorId: string
}

interface UserFriendlyError {
  title: string
  message: string
  actionButtons: Array<{
    label: string
    action: () => void
    variant: 'primary' | 'secondary' | 'danger'
  }>
  severity: 'error' | 'warning' | 'info'
  autoRetry?: boolean
  supportContact?: boolean
  details?: string
}

export class ErrorBoundary extends Component<Props, State> {
  private retryCount = 0
  private maxRetries = 3

  constructor(props: Props) {
    super(props)
    this.state = {
      hasError: false,
      error: null,
      errorInfo: null,
      errorId: this.generateErrorId()
    }
  }

  static getDerivedStateFromError(error: Error): Partial<State> {
    return {
      hasError: true,
      error,
      errorId: ErrorBoundary.prototype.generateErrorId()
    }
  }

  componentDidCatch(error: Error, errorInfo: ErrorInfo) {
    this.setState({
      error,
      errorInfo
    })

    // „Ç®„É©„Éº„É≠„Ç∞ÈÄÅ‰ø°
    this.logError(error, errorInfo)

    // „Ç≥„Éº„É´„Éê„ÉÉ„ÇØÂÆüË°å
    if (this.props.onError) {
      this.props.onError(error, errorInfo)
    }
  }

  generateErrorId(): string {
    return `err_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
  }

  logError(error: Error, errorInfo: ErrorInfo) {
    const errorData = {
      errorId: this.state.errorId,
      message: error.message,
      stack: error.stack,
      componentStack: errorInfo.componentStack,
      timestamp: new Date().toISOString(),
      userAgent: navigator.userAgent,
      url: window.location.href,
      userId: this.getUserId() // ÂÆüË£Ö„Å´Âøú„Åò„Å¶Ë™øÊï¥
    }

    // „Çµ„Éº„Éê„Éº„Å´„Ç®„É©„Éº„É≠„Ç∞„ÇíÈÄÅ‰ø°
    this.sendErrorToServer(errorData)

    // „Ç≥„É≥„ÇΩ„Éº„É´„Å´„É≠„Ç∞Âá∫Âäõ
    console.group(`üö® Error Boundary Caught Error [${this.state.errorId}]`)
    console.error('Error:', error)
    console.error('Error Info:', errorInfo)
    console.error('Error Data:', errorData)
    console.groupEnd()
  }

  async sendErrorToServer(errorData: any) {
    try {
      await fetch('/api/errors', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(errorData)
      })
    } catch (e) {
      console.error('Failed to send error to server:', e)
    }
  }

  getUserId(): string | null {
    // ÂÆüÈöõ„ÅÆÂÆüË£Ö„Åß„ÅØ„ÄÅË™çË®ºÁä∂ÊÖã„Åã„ÇâÂèñÂæó
    return localStorage.getItem('userId') || null
  }

  classifyError(error: Error): UserFriendlyError {
    const message = error.message.toLowerCase()
    const stack = error.stack?.toLowerCase() || ''

    // „Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Ç®„É©„Éº
    if (message.includes('network') || message.includes('fetch') || message.includes('load')) {
      return {
        title: '„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØÊé•Á∂ö„Ç®„É©„Éº',
        message: '„Ç§„É≥„Çø„Éº„Éç„ÉÉ„ÉàÊé•Á∂ö„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇÊé•Á∂ö„ÅåÂÆâÂÆö„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØ„ÄÅ„Åó„Å∞„Çâ„ÅèÊôÇÈñì„Çí„Åä„ÅÑ„Å¶„Åã„ÇâÂÜçË©¶Ë°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
        severity: 'error',
        autoRetry: true,
        supportContact: true,
        actionButtons: [
          {
            label: 'ÂÜçË©¶Ë°å',
            action: this.handleRetry.bind(this),
            variant: 'primary'
          },
          {
            label: '„Éõ„Éº„É†„Å´Êàª„Çã',
            action: this.goHome.bind(this),
            variant: 'secondary'
          }
        ]
      }
    }

    // „ÉÅ„É£„É≥„ÇØ„É≠„Éº„Éá„Ç£„É≥„Ç∞„Ç®„É©„ÉºÔºà„Çà„Åè„ÅÇ„Çã Next.js „Ç®„É©„ÉºÔºâ
    if (message.includes('loading chunk') || message.includes('loading css chunk')) {
      return {
        title: '„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥Êõ¥Êñ∞„Ç®„É©„Éº',
        message: '„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅåÊõ¥Êñ∞„Åï„Çå„Åæ„Åó„Åü„ÄÇ„Éö„Éº„Ç∏„ÇíÂÜçË™≠„ÅøËæº„Åø„Åó„Å¶ÊúÄÊñ∞Áâà„Çí„ÅîÂà©Áî®„Åè„Å†„Åï„ÅÑ„ÄÇ',
        severity: 'warning',
        autoRetry: false,
        actionButtons: [
          {
            label: '„Éö„Éº„Ç∏„ÇíÂÜçË™≠„ÅøËæº„Åø',
            action: () => window.location.reload(),
            variant: 'primary'
          }
        ]
      }
    }

    // „É°„É¢„É™‰∏çË∂≥„Ç®„É©„Éº
    if (message.includes('memory') || message.includes('heap')) {
      return {
        title: '„É°„É¢„É™‰∏çË∂≥„Ç®„É©„Éº',
        message: '„Éñ„É©„Ç¶„Ç∂„ÅÆ„É°„É¢„É™„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ‰ªñ„ÅÆ„Çø„Éñ„ÇíÈñâ„Åò„Çã„Åã„ÄÅ„Éñ„É©„Ç¶„Ç∂„ÇíÂÜçËµ∑Âãï„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
        severity: 'error',
        actionButtons: [
          {
            label: '„Éö„Éº„Ç∏„ÇíÂÜçË™≠„ÅøËæº„Åø',
            action: () => window.location.reload(),
            variant: 'primary'
          },
          {
            label: '„Éõ„Éº„É†„Å´Êàª„Çã',
            action: this.goHome.bind(this),
            variant: 'secondary'
          }
        ]
      }
    }

    // Ë™çË®º„Ç®„É©„Éº
    if (message.includes('auth') || message.includes('unauthorized') || message.includes('forbidden')) {
      return {
        title: 'Ë™çË®º„Ç®„É©„Éº',
        message: '„Çª„ÉÉ„Ç∑„Éß„É≥„ÅåÂàá„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇÂÜçÂ∫¶„É≠„Ç∞„Ç§„É≥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
        severity: 'warning',
        actionButtons: [
          {
            label: '„É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏„Å∏',
            action: () => window.location.href = '/auth/login',
            variant: 'primary'
          }
        ]
      }
    }

    // „Éï„Ç©„Éº„É†„Éê„É™„Éá„Éº„Ç∑„Éß„É≥„Ç®„É©„Éº
    if (message.includes('validation') || message.includes('required') || message.includes('invalid')) {
      return {
        title: 'ÂÖ•Âäõ„Ç®„É©„Éº',
        message: 'ÂÖ•ÂäõÂÜÖÂÆπ„Å´ÂïèÈ°å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÂêÑÈ†ÖÁõÆ„Çí„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ',
        severity: 'warning',
        actionButtons: [
          {
            label: 'Êàª„Çã',
            action: this.handleRetry.bind(this),
            variant: 'primary'
          }
        ]
      }
    }

    // „Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Ç®„É©„Éº
    if (message.includes('upload') || message.includes('file')) {
      return {
        title: '„Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Ç®„É©„Éº',
        message: '„Éï„Ç°„Ç§„É´„ÅÆ„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„Éï„Ç°„Ç§„É´ÂΩ¢Âºè„ÇÑ„Çµ„Ç§„Ç∫„Çí„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ',
        severity: 'error',
        supportContact: true,
        actionButtons: [
          {
            label: 'ÂÜçË©¶Ë°å',
            action: this.handleRetry.bind(this),
            variant: 'primary'
          },
          {
            label: 'Êàª„Çã',
            action: () => window.history.back(),
            variant: 'secondary'
          }
        ]
      }
    }

    // React „Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Ç®„É©„Éº
    if (stack.includes('react') || stack.includes('component')) {
      return {
        title: 'ÁîªÈù¢Ë°®Á§∫„Ç®„É©„Éº',
        message: 'ÁîªÈù¢„ÅÆË°®Á§∫‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ„Éö„Éº„Ç∏„ÇíÂÜçË™≠„ÅøËæº„Åø„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
        severity: 'error',
        supportContact: true,
        actionButtons: [
          {
            label: '„Éö„Éº„Ç∏„ÇíÂÜçË™≠„ÅøËæº„Åø',
            action: () => window.location.reload(),
            variant: 'primary'
          },
          {
            label: '„Éõ„Éº„É†„Å´Êàª„Çã',
            action: this.goHome.bind(this),
            variant: 'secondary'
          }
        ]
      }
    }

    // Ê±éÁî®„Ç®„É©„Éº
    return {
      title: '‰∫àÊúü„Åó„Å™„ÅÑ„Ç®„É©„Éº',
      message: '„Ç∑„Çπ„ÉÜ„É†„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇÂïèÈ°å„ÅåÁ∂ôÁ∂ö„Åô„ÇãÂ†¥Âêà„ÅØ„ÄÅ„Çµ„Éù„Éº„Éà„Åæ„Åß„ÅäÂïè„ÅÑÂêà„Çè„Åõ„Åè„Å†„Åï„ÅÑ„ÄÇ',
      severity: 'error',
      supportContact: true,
      details: error.message,
      actionButtons: [
        {
          label: 'ÂÜçË©¶Ë°å',
          action: this.handleRetry.bind(this),
          variant: 'primary'
        },
        {
          label: '„Éõ„Éº„É†„Å´Êàª„Çã',
          action: this.goHome.bind(this),
          variant: 'secondary'
        }
      ]
    }
  }

  handleRetry = () => {
    if (this.retryCount < this.maxRetries) {
      this.retryCount++
      this.setState({
        hasError: false,
        error: null,
        errorInfo: null,
        errorId: this.generateErrorId()
      })
    } else {
      // ÊúÄÂ§ß„É™„Éà„É©„Ç§ÂõûÊï∞„Å´ÈÅî„Åó„ÅüÂ†¥Âêà
      alert('ÂÜçË©¶Ë°å„ÅÆ‰∏äÈôê„Å´ÈÅî„Åó„Åæ„Åó„Åü„ÄÇ„Éö„Éº„Ç∏„ÇíÂÜçË™≠„ÅøËæº„Åø„Åô„Çã„Åã„ÄÅ„Çµ„Éù„Éº„Éà„Åæ„Åß„ÅäÂïè„ÅÑÂêà„Çè„Åõ„Åè„Å†„Åï„ÅÑ„ÄÇ')
    }
  }

  goHome = () => {
    window.location.href = '/dashboard'
  }

  copyErrorDetails = () => {
    const errorDetails = {
      errorId: this.state.errorId,
      message: this.state.error?.message,
      timestamp: new Date().toISOString(),
      url: window.location.href
    }
    
    navigator.clipboard.writeText(JSON.stringify(errorDetails, null, 2))
      .then(() => alert('„Ç®„É©„ÉºË©≥Á¥∞„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åó„Åæ„Åó„Åü'))
      .catch(() => alert('„Ç≥„Éî„Éº„Å´Â§±Êïó„Åó„Åæ„Åó„Åü'))
  }

  render() {
    if (this.state.hasError && this.state.error) {
      if (this.props.fallback) {
        return this.props.fallback
      }

      const userError = this.classifyError(this.state.error)

      return (
        <div className="min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8">
          <div className="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
            <div className="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">
              <div className="text-center">
                {/* „Ç¢„Ç§„Ç≥„É≥ */}
                <div className={`mx-auto flex items-center justify-center h-12 w-12 rounded-full ${
                  userError.severity === 'error' ? 'bg-red-100' :
                  userError.severity === 'warning' ? 'bg-yellow-100' : 'bg-blue-100'
                }`}>
                  <ExclamationTriangleIcon className={`h-6 w-6 ${
                    userError.severity === 'error' ? 'text-red-600' :
                    userError.severity === 'warning' ? 'text-yellow-600' : 'text-blue-600'
                  }`} />
                </div>

                {/* „Çø„Ç§„Éà„É´ */}
                <h3 className="mt-4 text-lg font-medium text-gray-900">
                  {userError.title}
                </h3>

                {/* „É°„ÉÉ„Çª„Éº„Ç∏ */}
                <p className="mt-2 text-sm text-gray-600 leading-relaxed">
                  {userError.message}
                </p>

                {/* „Ç®„É©„ÉºID */}
                <div className="mt-4 p-2 bg-gray-100 rounded text-xs text-gray-500 font-mono">
                  „Ç®„É©„ÉºID: {this.state.errorId}
                </div>

                {/* Ë©≥Á¥∞„Ç®„É©„ÉºÊÉÖÂ†±ÔºàÈñãÁô∫Áí∞Â¢É„ÅÆ„ÅøÔºâ */}
                {process.env.NODE_ENV === 'development' && userError.details && (
                  <details className="mt-4 text-left">
                    <summary className="text-sm text-gray-500 cursor-pointer">
                      ÊäÄË°ìÁöÑË©≥Á¥∞„ÇíË°®Á§∫
                    </summary>
                    <div className="mt-2 p-3 bg-gray-100 rounded text-xs font-mono text-gray-700 overflow-auto max-h-32">
                      {userError.details}
                    </div>
                  </details>
                )}

                {/* „Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥ */}
                <div className="mt-6 space-y-3">
                  {userError.actionButtons.map((button, index) => (
                    <Button
                      key={index}
                      onClick={button.action}
                      variant={button.variant}
                      className="w-full"
                    >
                      {button.label}
                    </Button>
                  ))}
                </div>

                {/* ËøΩÂä†„Ç¢„ÇØ„Ç∑„Éß„É≥ */}
                <div className="mt-6 flex justify-center space-x-4 text-sm">
                  <button
                    onClick={this.copyErrorDetails}
                    className="flex items-center text-gray-500 hover:text-gray-700"
                  >
                    <DocumentDuplicateIcon className="h-4 w-4 mr-1" />
                    „Ç®„É©„ÉºË©≥Á¥∞„Çí„Ç≥„Éî„Éº
                  </button>

                  {userError.supportContact && (
                    <a
                      href="mailto:support@ai-subsidy.com?subject=„Ç∑„Çπ„ÉÜ„É†„Ç®„É©„Éº&body=„Ç®„É©„ÉºID: ${this.state.errorId}"
                      className="flex items-center text-gray-500 hover:text-gray-700"
                    >
                      <ChatBubbleLeftEllipsisIcon className="h-4 w-4 mr-1" />
                      „Çµ„Éù„Éº„Éà„Å´ÈÄ£Áµ°
                    </a>
                  )}
                </div>

                {/* Ëá™Âãï„É™„Éà„É©„Ç§Ë°®Á§∫ */}
                {userError.autoRetry && this.retryCount < this.maxRetries && (
                  <div className="mt-4 flex items-center justify-center text-sm text-gray-500">
                    <ArrowPathIcon className="h-4 w-4 mr-1 animate-spin" />
                    Ëá™Âãï„ÅßÂÜçË©¶Ë°å„Åó„Å¶„ÅÑ„Åæ„Åô... ({this.retryCount + 1}/{this.maxRetries})
                  </div>
                )}
              </div>
            </div>
          </div>

          {/* „Éï„ÉÉ„Çø„Éº */}
          <div className="mt-8 text-center">
            <p className="text-xs text-gray-400">
              „ÅäÂõ∞„Çä„ÅÆÂ†¥Âêà„ÅØ„ÄÅ„Çµ„Éù„Éº„Éà„Åæ„Åß„ÅäÊ∞óËªΩ„Å´„ÅäÂïè„ÅÑÂêà„Çè„Åõ„Åè„Å†„Åï„ÅÑ
            </p>
          </div>
        </div>
      )
    }

    return this.props.children
  }
}

// React HooksÁâà„ÅÆ„Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞
export function useErrorHandler() {
  const handleError = (error: Error, errorInfo?: any) => {
    // „Ç®„É©„Éº„É≠„Ç∞„ÅÆÈÄÅ‰ø°
    console.error('Unhandled error:', error, errorInfo)
    
    // „É¶„Éº„Ç∂„Éº„Å∏„ÅÆÈÄöÁü•
    if (error.message.includes('network')) {
      alert('„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇÊé•Á∂ö„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ')
    } else {
      alert('„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ„Éö„Éº„Ç∏„ÇíÂÜçË™≠„ÅøËæº„Åø„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ')
    }
  }

  return { handleError }
}

// „Ç®„É©„ÉºÂ¢ÉÁïå„ÅÆ„É©„ÉÉ„Éë„Éº„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
export function withErrorBoundary<P extends object>(
  Component: React.ComponentType<P>,
  errorBoundaryProps?: Partial<Props>
) {
  return function WrappedComponent(props: P) {
    return (
      <ErrorBoundary {...errorBoundaryProps}>
        <Component {...props} />
      </ErrorBoundary>
    )
  }
}